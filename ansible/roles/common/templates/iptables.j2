#!/bin/sh 

### THIS FILE CONTROLLED BY ANSIBLE ###
### BEST NOT TO EDIT DIRECTLY       ###

############################## "{{ ansible_hostname }}" Firewall ###################################

EXT_INTERFACE="{{ external_interface }}"
INT_INTERFACES="eth0 usb0 wlan1"
AP_INTERFACE="wlan1"

# Specify allowed DNS servers
DNS_SERVERS="{{ dns_servers | join(" ") }}"

# BAN these hosts (space seperated)
BAN_IPS=""

IPTABLES="/sbin/iptables"
MODPROBE="/sbin/modprobe"
IPTABLESV=`$IPTABLES -V`
echo "[+] Using $IPTABLESV ($IPTABLES)"
#################################################################################

echo "[+] Network kernel settings"
### IP stack
echo 1 > /proc/sys/net/ipv4/ip_forward
echo 0 > /proc/sys/net/ipv4/conf/all/accept_redirects
echo 1 > /proc/sys/net/ipv4/conf/all/log_martians
echo 0 > /proc/sys/net/ipv4/conf/all/bootp_relay
### icmp
echo 0 > /proc/sys/net/ipv4/icmp_echo_ignore_all
echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts
echo 1 > /proc/sys/net/ipv4/icmp_ignore_bogus_error_responses

### flush existing rules and set chain policy setting to DROP
echo "[+] Flushing existing iptables rules..."
$IPTABLES -F
$IPTABLES -F -t nat
$IPTABLES -X
$IPTABLES -P INPUT DROP
$IPTABLES -P OUTPUT ACCEPT
$IPTABLES -P FORWARD DROP

### Drop invalid packets
$IPTABLES -A INPUT -m conntrack --ctstate INVALID -j DROP
$IPTABLES -A FORWARD -m conntrack --ctstate INVALID -j DROP
$IPTABLES -A OUTPUT -m conntrack --ctstate INVALID -j DROP


############################### FORWARDING #####################################
$IPTABLES -A FORWARD -i $AP_INTERFACE -j ACCEPT

############################### PREROUTING #####################################
$IPTABLES -t nat -A PREROUTING -i eth0 ! -d 192.168.5.1 -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -j REDIRECT --to-ports 9040
$IPTABLES -t nat -A PREROUTING -i eth0 -p udp -m udp --dport 53 -j REDIRECT --to-ports 9053
$IPTABLES -t nat -A PREROUTING -i $AP_INTERFACE ! -d 192.168.5.1 -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -j DNAT --to 192.168.5.1:9040
$IPTABLES -t nat -A PREROUTING -i $AP_INTERFACE -p udp -m udp --dport 53 -j DNAT --to 192.168.5.1:9053


############################### INPUT chain #####################################
echo "[+] Setting up INPUT chain..."

### drop ban list first
for ATTACKER in $BAN_IPS
do
 $IPTABLES -A INPUT -s $ATTACKER -j DROP
done

### state tracking rules in
$IPTABLES -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT

# SYN Check
$IPTABLES -A INPUT -p tcp ! --syn -m state --state NEW -j DROP

# Drop NULL TCP packets
$IPTABLES -A INPUT -p tcp --tcp-flags ALL NONE -j DROP

# Accept loopback
$IPTABLES -A INPUT -i lo -j ACCEPT 

# Accept client-side interfaces
for i in $INT_INTERFACES; do
  $IPTABLES -A INPUT -i $i -j ACCEPT 
done

### Default Drop
# rsyslog moves strings in debug with "unsolicited" to /var/log/iptables
$IPTABLES -A INPUT -i $EXT_INTERFACE -m limit --limit 4/s --limit-burst 8 -j DROP
# just to be sure:
$IPTABLES -A INPUT -j DROP


################################## OUTPUT chain ###################################
echo "[+] Setting up OUTPUT chain..."

### state tracking rules out
$IPTABLES -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

# localhost / 127.0.0.1
$IPTABLES -A OUTPUT -o lo -j ACCEPT

### Log + Drop all other (actually for now we're allowing all)
$IPTABLES -A OUTPUT -j ACCEPT

####################################################################################

iptables-save > /etc/iptables/rules.v4

exit
### EOF ###
